name: Secure Convert pnpm to npm and Scan with Checkmarx ONE

on:
  push:
    branches:
      - master
  pull_request:
      branches:
        - master

permissions:
  contents: write
  id-token: write

jobs:
  convert-validate-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with credentials for pushing)
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Securely Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm (Fix Missing Binary)
        run: |
          npm install -g pnpm
          export PATH=$(npm root -g)/pnpm/bin:$PATH
          pnpm --version
        shell: bash

      - name: Ensure pnpm-lock.yaml Exists
        run: |
          if [ ! -f "pnpm-lock.yaml" ]; then
            echo "‚ö†Ô∏è pnpm-lock.yaml not found, generating..."
            pnpm install --lockfile-only
            
            # Configure Git user
            git config --local user.email "sean.carroll@checkmarx.com"
            git config --local user.name "Sean Carroll"

            # Authenticate with GitHub Token
            git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

            # Commit and push changes
            git add pnpm-lock.yaml
            git commit -m "Auto-generate pnpm-lock.yaml"
            git push origin master
          else
            echo "‚úÖ pnpm-lock.yaml already exists."
          fi
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        shell: bash

      - name: Securely Convert All pnpm-lock.yaml Files to package-lock.json
        run: |
          set -euo pipefail
          mkdir -p build/cache
          find . -type f -name "pnpm-lock.yaml" -print0 | while IFS= read -r -d '' pnpm_lock; do
            dir=$(dirname "$pnpm_lock")

            if [[ "$dir" != ./[^.]* ]]; then
              echo "‚ö†Ô∏è Skipping unsafe directory: $dir"
              continue
            fi

            echo "üîç Processing $pnpm_lock in $dir..."

            if [ ! -f "$dir/package.json" ]; then
              echo "‚ö†Ô∏è Skipping $dir (no package.json found)"
              continue
            fi

            (cd "$dir" && pnpm import --silent) || { echo "‚ùå pnpm import failed in $dir"; exit 1; }

            if [ -f "$dir/package-lock.json" ]; then
              mkdir -p "build/cache/$dir"
              cp "$dir/package.json" "$dir/package-lock.json" "build/cache/$dir/"
            else
              echo "‚ùå Error: package-lock.json was not generated in $dir"
              exit 1
            fi
          done
        shell: bash

      - name: Cache npm manifests for Checkmarx ONE
        uses: actions/cache@v3
        with:
          path: build/cache
          key: npm-manifest-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            npm-manifest-${{ runner.os }}-

      - name: Run Checkmarx ONE Scan (Secure Authentication)
        uses: checkmarx/ast-github-action@main
        with:
          project_name: ${{ github.repository }}
          base_uri: https://ast.checkmarx.net
          cx_tenant: ${{ secrets.CX_TENANT }}
          cx_client_id: ${{ secrets.CX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}
